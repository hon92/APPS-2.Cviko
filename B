#include "../avrkit/avrkit.h"
#include <stdio.h>
#include <avr/io.h>


#define neg(VYSTUP) PORTB^= (1 << VYSTUP)



void port_init() //Inicializace portu
{
DDRB = 0xFF; //Nastavim PORTB na vystup
DDRC = 0xFF; //Nastavim PORTC na vystup

PORTB = 0xFF; //Zapnu na vsech segmentech log.1 - [b][size=150][color=#FF0000]pouze pro simulator, v nem nejsou v zapojeni tranzistory, ve cviceni je treba PORTB nastavit na 0x00[/color][/size][/b]
}

unsigned char BCD(unsigned char vstup){ 
   if(vstup == 0) return 0x3F; //cislo 0
   if(vstup == 1) return 0x06; //cislo 1
   if(vstup == 2) return 0x5B; //cislo 2
   if(vstup == 3) return 0x4F; //cislo 3
   if(vstup == 4) return 0x66; //cislo 4
   if(vstup == 5) return 0x6D; //cislo 5
   if(vstup == 6) return 0x7D; //cislo 6
   if(vstup == 7) return 0x07; //cislo 7
   if(vstup == 8) return 0x7F; //cislo 8
   if(vstup == 9) return 0x6F; //cislo 9
   
}

 int main()
{
port_init();

char login[4]={0,0,0,9}; //Deklarace cisel loginu

//A - B - 1 Bod
while(1)
{
for(int i=0;i<10;i++)
{
   PORTC=BCD(i); // Kdybych chtel tecku tak za to dam jeste "| 0x80" 
   neg(i); //Rozsvitim segment
   delay_ms(1/4);
   neg(i); //Zhasnu segment
}

//B - 3 body
int number = 32;
int first  = number / 10; //Ziskavam jednotky
int second = number % 10; //Ziskavam desitky
while(1)
{
PORTC=BCD(first); //Zapis jednotek
neg(0);
delay_01ms(1);
neg(0);

PORTC=BCD(second); //Zapis desitek
neg(1);
delay_01ms(1);
neg(1);

//B - 5 bodu
while(1)
{
for(int i=0;i<100;i++)
   {
   if(i<10) // Do 10
      {   
      for(int time=0;time<1000;time++)
         {
         PORTC=BCD(i);
         neg(0);
         delay_ms(2/4);
         neg(0);      
         delay_ms(2/4);         
         }
      }      
   else //10-99
      {
      int first  = i/10;
      int second = i%10;
      for(int time=0;time<1000;time++)
         {
         PORTC=BCD(first);
         neg(0);
         delay_01ms(1/2);
         neg(0);
         PORTC=BCD(second);
         neg(1);
         delay_01ms(1/2);
         neg(1);
            }            
         }
      }
      
//B - 7 Bodu
int first_seconds, seconds_seconds, first_minutes, second_minutes, first_hours, second_hours;   

while(1)   
{

for(int hours=0;hours<24;hours++) //Cyklus hodin
{
   for(int minutes=0;minutes<60;minutes++)   //Cyklus minut
   {
      for(int seconds=0;seconds<60;seconds++)   //Cyklus sekund
      {   
         for(int time=0;time<1000;time++)
         {
         //Hodiny
         int first_hours = hours/10; 
         int second_hours = hours%10;
         PORTC=BCD(first_hours);
         neg(1);
         delay_ms(1/10);
         neg(1);

         PORTC=BCD(second_hours) | 0x80;
         neg(2);
         delay_ms(1/10);
         neg(2);
   
         //Minuty
         int first_minutes = minutes/10;
         int second_minutes = minutes%10;
         PORTC=BCD(first_minutes);
         neg(3);
         delay_ms(1/10);
         neg(3);

         PORTC=BCD(second_minutes) | 0x80;
         neg(4);
         delay_ms(1/10);
         neg(4);

         //Vteriny
         int first_seconds = seconds/10;
         int second_seconds = seconds%10;
         PORTC=BCD(first_seconds);
         neg(5);
         delay_ms(1/10);
         neg(5);

         PORTC=BCD(second_seconds);
         neg(6);
         delay_ms(1/10);
         neg(6);
         }
      }         
   }         
}
